// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-playground/validator/v10"
	"github.com/google/wire"
	"github.com/mproyyan/go-simple-restful/app"
	"github.com/mproyyan/go-simple-restful/contract"
	"github.com/mproyyan/go-simple-restful/controller"
	"github.com/mproyyan/go-simple-restful/middleware"
	"github.com/mproyyan/go-simple-restful/repository"
	"github.com/mproyyan/go-simple-restful/service"
	"net/http"
)

import (
	_ "github.com/go-sql-driver/mysql"
)

// Injectors from injector.go:

func InitializeServer() *http.Server {
	productRepository := repository.NewProductRepository()
	db := app.NewDB()
	validate := validator.New()
	productService := service.NewProductService(productRepository, db, validate)
	productController := controller.NewProductController(productService)
	router := app.NewRouter(productController)
	authMiddleware := middleware.NewAuthMiddleware(router)
	server := NewServer(authMiddleware)
	return server
}

// injector.go:

var productRepositorySet = wire.NewSet(repository.NewProductRepository, wire.Bind(new(contract.ProductRepositoryContract), new(*repository.ProductRepository)))

var productServiceSet = wire.NewSet(service.NewProductService, wire.Bind(new(contract.ProductServiceContract), new(*service.ProductService)))

var productControllerSet = wire.NewSet(controller.NewProductController, wire.Bind(new(contract.ProductControllerContract), new(*controller.ProductController)))
